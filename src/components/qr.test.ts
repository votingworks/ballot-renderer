import qr from './qr'

test('builds an SVG element for the QR code representing the given data', () => {
  expect(qr(Uint8Array.of(1, 2, 3))).toMatchInlineSnapshot(`
    Object {
      "svg": "<svg shapeRendering=\\"crispEdges\\" viewBox=\\"0 0 21 21\\">
          <path fill=\\"#fff\\" d=\\"M0,0 h21v21H0z\\" />
          <path fill=\\"#000\\" d=\\"M0 0h7v1H0zM8 0h1v1H8zM10 0h1v1H10zM14,0 h7v1H14zM0 1h1v1H0zM6 1h1v1H6zM9 1h1v1H9zM11 1h1v1H11zM14 1h1v1H14zM20,1 h1v1H20zM0 2h1v1H0zM2 2h3v1H2zM6 2h1v1H6zM8 2h1v1H8zM11 2h2v1H11zM14 2h1v1H14zM16 2h3v1H16zM20,2 h1v1H20zM0 3h1v1H0zM2 3h3v1H2zM6 3h1v1H6zM9 3h1v1H9zM14 3h1v1H14zM16 3h3v1H16zM20,3 h1v1H20zM0 4h1v1H0zM2 4h3v1H2zM6 4h1v1H6zM8 4h2v1H8zM11 4h1v1H11zM14 4h1v1H14zM16 4h3v1H16zM20,4 h1v1H20zM0 5h1v1H0zM6 5h1v1H6zM9 5h1v1H9zM11 5h1v1H11zM14 5h1v1H14zM20,5 h1v1H20zM0 6h7v1H0zM8 6h1v1H8zM10 6h1v1H10zM12 6h1v1H12zM14,6 h7v1H14zM8 7h2v1H8zM12 7h1v1H12zM5 8h2v1H5zM10 8h3v1H10zM14 8h1v1H14zM16 8h1v1H16zM18 8h1v1H18zM20,8 h1v1H20zM0 9h1v1H0zM3 9h2v1H3zM11 9h2v1H11zM14 9h3v1H14zM18 9h1v1H18zM20,9 h1v1H20zM1 10h1v1H1zM4 10h3v1H4zM9 10h1v1H9zM12 10h2v1H12zM15 10h1v1H15zM0 11h1v1H0zM3 11h3v1H3zM8 11h1v1H8zM10 11h6v1H10zM18 11h2v1H18zM0 12h2v1H0zM6 12h3v1H6zM11 12h1v1H11zM13,12 h8v1H13zM8 13h3v1H8zM14 13h1v1H14zM18 13h1v1H18zM0 14h7v1H0zM9 14h3v1H9zM13 14h2v1H13zM16 14h2v1H16zM0 15h1v1H0zM6 15h1v1H6zM8 15h3v1H8zM18 15h2v1H18zM0 16h1v1H0zM2 16h3v1H2zM6 16h1v1H6zM9 16h1v1H9zM12 16h3v1H12zM16 16h1v1H16zM18 16h1v1H18zM0 17h1v1H0zM2 17h3v1H2zM6 17h1v1H6zM11 17h1v1H11zM15 17h1v1H15zM17 17h1v1H17zM0 18h1v1H0zM2 18h3v1H2zM6 18h1v1H6zM10 18h1v1H10zM12 18h1v1H12zM14 18h4v1H14zM19,18 h2v1H19zM0 19h1v1H0zM6 19h1v1H6zM11 19h3v1H11zM15 19h1v1H15zM17 19h1v1H17zM0 20h7v1H0zM9 20h1v1H9zM11 20h2v1H11zM14 20h2v1H14zM18 20h2v1H18z\\" />
        </svg>",
    }
  `)
})

test('builds an SVG element with options', () => {
  expect(qr(Uint8Array.of(0), { width: 100 })).toMatchObject(
    expect.objectContaining({ width: 100 })
  )
})
